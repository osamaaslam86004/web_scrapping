[{"title": "Learning Python", "authors": ["Mark Lutz"], "publishedDate": "2013-06-12", "description": "Get a comprehensive, in-depth introduction to the core Python language with this hands-on book. Based on author Mark Lutz\u2019s popular training course, this updated fifth edition will help you quickly write efficient, high-quality code with Python. It\u2019s an ideal way to begin, whether you\u2019re new to programming or a professional developer versed in other languages. Complete with quizzes, exercises, and helpful illustrations, this easy-to-follow, self-paced tutorial gets you started with both Python 2.7 and 3.3\u2014 the latest releases in the 3.X and 2.X lines\u2014plus all other releases in common use today. You\u2019ll also learn some advanced language features that recently have become more common in Python code. Explore Python\u2019s major built-in object types such as numbers, lists, and dictionaries Create and process objects with Python statements, and learn Python\u2019s general syntax model Use functions to avoid code redundancy and package code for reuse Organize statements, functions, and other tools into larger components with modules Dive into classes: Python\u2019s object-oriented programming tool for structuring code Write large programs with Python\u2019s exception-handling model and development tools Learn advanced Python tools, including decorators, descriptors, metaclasses, and Unicode processing", "infoLink": "http://books.google.com/books?id=4pgQfXQvekcC&dq=python&hl=&as_pt=BOOKS&source=gbs_api"}, {"title": "Clean Code in Python", "authors": ["Mariano Anaya"], "publishedDate": "2018-08-29", "description": "Getting the most out of Python to improve your codebase Key Features Save maintenance costs by learning to fix your legacy codebase Learn the principles and techniques of refactoring Apply microservices to your legacy systems by implementing practical techniques Book Description Python is currently used in many different areas such as software construction, systems administration, and data processing. In all of these areas, experienced professionals can find examples of inefficiency, problems, and other perils, as a result of bad code. After reading this book, readers will understand these problems, and more importantly, how to correct them. The book begins by describing the basic elements of writing clean code and how it plays an important role in Python programming. You will learn about writing efficient and readable code using the Python standard library and best practices for software design. You will learn to implement the SOLID principles in Python and use decorators to improve your code. The book delves more deeply into object oriented programming in Python and shows you how to use objects with descriptors and generators. It will also show you the design principles of software testing and how to resolve software problems by implementing design patterns in your code. In the final chapter we break down a monolithic application to a microservice one, starting from the code as the basis for a solid platform. By the end of the book, you will be proficient in applying industry approved coding practices to design clean, sustainable and readable Python code. What you will learn Set up tools to effectively work in a development environment Explore how the magic methods of Python can help us write better code Examine the traits of Python to create advanced object-oriented design Understand removal of duplicated code using decorators and descriptors Effectively refactor code with the help of unit tests Learn to implement the SOLID principles in Python Who this book is for This book will appeal to team leads, software architects and senior software engineers who would like to work on their legacy systems to save cost and improve efficiency. A strong understanding of Programming is assumed.", "infoLink": "http://books.google.com/books?id=ZB9sDwAAQBAJ&dq=python&hl=&as_pt=BOOKS&source=gbs_api"}, {"title": "Classic Computer Science Problems in Java", "authors": ["David Kopec"], "publishedDate": "2020-12-21", "description": "Sharpen your coding skills by exploring established computer science problems! Classic Computer Science Problems in Java challenges you with time-tested scenarios and algorithms. Summary Sharpen your coding skills by exploring established computer science problems! Classic Computer Science Problems in Java challenges you with time-tested scenarios and algorithms. You\u2019ll work through a series of exercises based in computer science fundamentals that are designed to improve your software development abilities, improve your understanding of artificial intelligence, and even prepare you to ace an interview. As you work through examples in search, clustering, graphs, and more, you'll remember important things you've forgotten and discover classic solutions to your \"new\" problems! Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications. About the technology Whatever software development problem you\u2019re facing, odds are someone has already uncovered a solution. This book collects the most useful solutions devised, guiding you through a variety of challenges and tried-and-true problem-solving techniques. The principles and algorithms presented here are guaranteed to save you countless hours in project after project. About the book Classic Computer Science Problems in Java is a master class in computer programming designed around 55 exercises that have been used in computer science classrooms for years. You\u2019ll work through hands-on examples as you explore core algorithms, constraint problems, AI applications, and much more. What's inside Recursion, memoization, and bit manipulation Search, graph, and genetic algorithms Constraint-satisfaction problems K-means clustering, neural networks, and adversarial search About the reader For intermediate Java programmers. About the author David Kopec is an assistant professor of Computer Science and Innovation at Champlain College in Burlington, Vermont. Table of Contents 1 Small problems 2 Search problems 3 Constraint-satisfaction problems 4 Graph problems 5 Genetic algorithms 6 K-means clustering 7 Fairly simple neural networks 8 Adversarial search 9 Miscellaneous problems 10 Interview with Brian Goetz", "infoLink": "http://books.google.com/books?id=ATgzEAAAQBAJ&dq=python&hl=&as_pt=BOOKS&source=gbs_api"}, {"title": "Introduction to Computation and Programming Using Python", "authors": ["John V. Guttag", "John Guttag"], "publishedDate": "2013-08-09", "description": "An introductory text that teaches students the art of computational problem solving, covering topics that range from simple algorithms to information visualization.", "infoLink": "http://books.google.com/books?id=pVP8AQAAQBAJ&dq=python&hl=&as_pt=BOOKS&source=gbs_api"}, {"title": "Learning Python", "authors": ["Mark Lutz"], "publishedDate": "2007-10-22", "description": "Portable, powerful, and a breeze to use, Python is ideal for both standalone programs and scripting applications. With this hands-on book, you can master the fundamentals of the core Python language quickly and efficiently, whether you're new to programming or just new to Python. Once you finish, you will know enough about the language to use it in any application domain you choose. Learning Python is based on material from author Mark Lutz's popular training courses, which he's taught over the past decade. Each chapter is a self-contained lesson that helps you thoroughly understand a key component of Python before you continue. Along with plenty of annotated examples, illustrations, and chapter summaries, every chapter also contains Brain Builder, a unique section with practical exercises and review quizzes that let you practice new skills and test your understanding as you go. This book covers: Types and Operations -- Python's major built-in object types in depth: numbers, lists, dictionaries, and more Statements and Syntax -- the code you type to create and process objects in Python, along with Python's general syntax model Functions -- Python's basic procedural tool for structuring and reusing code Modules -- packages of statements, functions, and other tools organized into larger components Classes and OOP -- Python's optional object-oriented programming tool for structuring code for customization and reuse Exceptions and Tools -- exception handling model and statements, plus a look at development tools for writing larger programs Learning Python gives you a deep and complete understanding of the language that will help you comprehend any application-level examples of Python that you later encounter. If you're ready to discover what Google and YouTube see in Python, this book is the best way to get started.", "infoLink": "http://books.google.com/books?id=nEJ-jcYF2fMC&dq=python&hl=&as_pt=BOOKS&source=gbs_api"}, {"title": "Think Python", "authors": ["Allen Downey"], "publishedDate": "2015-12-02", "description": "If you want to learn how to program, working with Python is an excellent way to start. This hands-on guide takes you through the language a step at a time, beginning with basic programming concepts before moving on to functions, recursion, data structures, and object-oriented design. This second edition and its supporting code have been updated for Python 3. Through exercises in each chapter, you\u00e2??ll try out programming concepts as you learn them. Think Python is ideal for students at the high school or college level, as well as self-learners, home-schooled students, and professionals who need to learn programming basics. Beginners just getting their feet wet will learn how to start with Python in a browser. Start with the basics, including language syntax and semantics Get a clear definition of each programming concept Learn about values, variables, statements, functions, and data structures in a logical progression Discover how to work with files and databases Understand objects, methods, and object-oriented programming Use debugging techniques to fix syntax, runtime, and semantic errors Explore interface design, data structures, and GUI-based programs through case studies", "infoLink": "http://books.google.com/books?id=MJ4bCwAAQBAJ&dq=python&hl=&as_pt=BOOKS&source=gbs_api"}, {"title": "The Quick Python Book", "authors": ["Vernon L. Ceder", "Naomi R. Ceder"], "publishedDate": "2010", "description": "Introduces the programming language's syntax, control flow, and basic data structures and covers its interaction with applications and mangement of large collections of code.", "infoLink": "http://books.google.com/books?id=HFeGvgEACAAJ&dq=python&hl=&as_pt=BOOKS&source=gbs_api"}, {"title": "Learning Scientific Programming with Python", "authors": ["Christian Hill"], "publishedDate": "2016-02-04", "description": "Learn to master basic programming tasks from scratch with real-life scientifically relevant examples and solutions drawn from both science and engineering. Students and researchers at all levels are increasingly turning to the powerful Python programming language as an alternative to commercial packages and this fast-paced introduction moves from the basics to advanced concepts in one complete volume, enabling readers to quickly gain proficiency. Beginning with general programming concepts such as loops and functions within the core Python 3 language, and moving onto the NumPy, SciPy and Matplotlib libraries for numerical programming and data visualisation, this textbook also discusses the use of IPython notebooks to build rich-media, shareable documents for scientific analysis. Including a final chapter introducing challenging topics such as floating-point precision and algorithm stability, and with extensive online resources to support advanced study, this textbook represents a targeted package for students requiring a solid foundation in Python programming.", "infoLink": "http://books.google.com/books?id=cvSTCwAAQBAJ&dq=python&hl=&as_pt=BOOKS&source=gbs_api"}, {"title": "Python for Programmers", "authors": ["Paul Deitel", "Harvey Deitel"], "publishedDate": "2019-03-15", "description": "The professional programmer\u2019s Deitel\u00ae guide to Python\u00ae with introductory artificial intelligence case studies Written for programmers with a background in another high-level language, Python for Programmers uses hands-on instruction to teach today\u2019s most compelling, leading-edge computing technologies and programming in Python\u2013one of the world\u2019s most popular and fastest-growing languages. Please read the Table of Contents diagram inside the front cover and the Preface for more details. In the context of 500+, real-world examples ranging from individual snippets to 40 large scripts and full implementation case studies, you\u2019ll use the interactive IPython interpreter with code in Jupyter Notebooks to quickly master the latest Python coding idioms. After covering Python Chapters 1-5 and a few key parts of Chapters 6-7, you\u2019ll be able to handle significant portions of the hands-on introductory AI case studies in Chapters 11-16, which are loaded with cool, powerful, contemporary examples. These include natural language processing, data mining Twitter\u00ae for sentiment analysis, cognitive computing with IBM\u00ae WatsonTM, supervised machine learning with classification and regression, unsupervised machine learning with clustering, computer vision through deep learning and convolutional neural networks, deep learning with recurrent neural networks, big data with Hadoop\u00ae, SparkTM and NoSQL databases, the Internet of Things and more. You\u2019ll also work directly or indirectly with cloud-based services, including Twitter, Google TranslateTM, IBM Watson, Microsoft\u00ae Azure\u00ae, OpenMapQuest, PubNub and more. Features 500+ hands-on, real-world, live-code examples from snippets to case studies IPython + code in Jupyter\u00ae Notebooks Library-focused: Uses Python Standard Library and data science libraries to accomplish significant tasks with minimal code Rich Python coverage: Control statements, functions, strings, files, JSON serialization, CSV, exceptions Procedural, functional-style and object-oriented programming Collections: Lists, tuples, dictionaries, sets, NumPy arrays, pandas Series & DataFrames Static, dynamic and interactive visualizations Data experiences with real-world datasets and data sources Intro to Data Science sections: AI, basic stats, simulation, animation, random variables, data wrangling, regression AI, big data and cloud data science case studies: NLP, data mining Twitter\u00ae, IBM\u00ae WatsonTM, machine learning, deep learning, computer vision, Hadoop\u00ae, SparkTM, NoSQL, IoT Open-source libraries: NumPy, pandas, Matplotlib, Seaborn, Folium, SciPy, NLTK, TextBlob, spaCy, Textatistic, Tweepy, scikit-learn\u00ae, Keras and more Accompanying code examples are available here: http://ptgmedia.pearsoncmg.com/imprint_downloads/informit/bookreg/9780135224335/9780135224335_examples.zip. Register your product for convenient access to downloads, updates, and/or corrections as they become available. See inside book for more information.", "infoLink": "http://books.google.com/books?id=LauMDwAAQBAJ&dq=python&hl=&as_pt=BOOKS&source=gbs_api"}, {"title": "Python Data Science Handbook", "authors": ["Jake VanderPlas"], "publishedDate": "2016-11-21", "description": "For many researchers, Python is a first-class tool mainly because of its libraries for storing, manipulating, and gaining insight from data. Several resources exist for individual pieces of this data science stack, but only with the Python Data Science Handbook do you get them all\u2014IPython, NumPy, Pandas, Matplotlib, Scikit-Learn, and other related tools. Working scientists and data crunchers familiar with reading and writing Python code will find this comprehensive desk reference ideal for tackling day-to-day issues: manipulating, transforming, and cleaning data; visualizing different types of data; and using data to build statistical or machine learning models. Quite simply, this is the must-have reference for scientific computing in Python. With this handbook, you\u2019ll learn how to use: IPython and Jupyter: provide computational environments for data scientists using Python NumPy: includes the ndarray for efficient storage and manipulation of dense data arrays in Python Pandas: features the DataFrame for efficient storage and manipulation of labeled/columnar data in Python Matplotlib: includes capabilities for a flexible range of data visualizations in Python Scikit-Learn: for efficient and clean Python implementations of the most important and established machine learning algorithms", "infoLink": "http://books.google.com/books?id=6omNDQAAQBAJ&dq=python&hl=&as_pt=BOOKS&source=gbs_api"}]